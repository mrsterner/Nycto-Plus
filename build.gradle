plugins {
	id 'maven-publish'
	id 'io.github.juuxel.loom-quiltflower' version '1.8.+'
	id 'org.quiltmc.loom' version '1.+'
}

archivesBaseName = project.archives_base_name
version = project.version
group = project.maven_group

repositories {
	maven {
		name = "GeckoLib"
		url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
	}
	maven {
		name "Modrinth, MidnightLib"
		url "https://api.modrinth.com/maven"
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	mappings "org.quiltmc:quilt-mappings:${minecraft_version}+build.${quilt_mappings}:intermediary-v2"


	modImplementation "org.quiltmc:quilt-loader:${project.loader_version}"
	modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${project.quilted_fabric_api_version}-${project.minecraft_version}"

	//GeckoLib
	modImplementation "software.bernie.geckolib:geckolib-quilt-1.19.3:${project.geckolib}"

	//MidnightLib
	//modImplementation "maven.modrinth:midnightlib:${project.midnightlib_version}"

	//SatinAPI
	modImplementation "io.github.ladysnake:satin:${project.satin_version}"
}

loom {
	accessWidenerPath = file("src/main/resources/nyctoplus.accesswidener")
	runs {
		datagen {
			server()

			name = "Data Generation"
			runDir = "build/datagen"

			vmArg("-Dfabric-api.datagen")
			vmArg("-Dfabric-api.datagen.output-dir=${file("src/main/generated")}")
		}
	}
}

assemble.dependsOn(runDatagen)

sourceSets {
	main {
		resources {
			srcDirs += [
					"src/main/generated"
			]
		}
	}
}

processResources {
	inputs.property "version", version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}
